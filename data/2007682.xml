<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle><![CDATA[AF: Small: Challenges in Communication Complexity and Pseudorandomness]]></AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>07/01/2020</AwardEffectiveDate>
<AwardExpirationDate>06/30/2024</AwardExpirationDate>
<AwardTotalIntnAmount>400000.00</AwardTotalIntnAmount>
<AwardAmount>400000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Peter Brass</SignBlockName>
<PO_EMAI>pbrass@nsf.gov</PO_EMAI>
<PO_PHON>7032922182</PO_PHON>
</ProgramOfficer>
<AbstractNarration>The project addresses central questions within two closely related areas: communication complexity, and pseudorandomness. What is the minimal amount of communication needed to complete a computational task when the input is split between different parties? Such questions have profound applications both in theory and in practice, especially as communication is increasingly becoming the bottleneck in large-scale computation. A goal of the project is to prove meta-theorems and develop generic techniques that reduce understanding communication to much simpler 'decision-theoretic' problems.  Randomness versus determinism in the universe is an ancient philosophical debate. In computing, however, randomness seems to be winning hands down with amazing applications in cryptography, e-commerce, data analytics, algorithm design, and networking. Which of these applications absolutely need randomness? Which of them can still be simulated if we do not have random bits or have access only to defective random bits as in data from radio-active decay? The project will study these fundamental questions when optimizing for memory as a resource: Can we simulate randomized algorithms deterministically with only a small overhead in memory?  The investigator will develop and make freely available educational material on these cutting-edge research problems and guide undergraduate and graduate students on performing research on these topics.                                          &lt;br/&gt;&lt;br/&gt;In more detail, the project aims to develop a comprehensive theory of 'lifting theorems' in communication, which reduce proving communication lower bounds to proving query-complexity lower bounds that are often simpler. The project will focus on the two central open problems in this area: lifting for constant-size gadgets, and lifting for semi-definite optimization. The investigator will also explore new applications and connections between multi-party communication complexity and leakage-resilience in cryptography and extractors. The project also seeks to design optimal pseudorandom generators for small-width branching programs, which would be a significant step toward understanding the trade-off between randomness and space.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>06/29/2020</MinAmdLetterDate>
<MaxAmdLetterDate>06/29/2020</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>2007682</AwardID>
<Investigator>
<FirstName>Raghu</FirstName>
<LastName>Meka</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Raghu Meka</PI_FULL_NAME>
<EmailAddress><![CDATA[raghum@cs.ucla.edu]]></EmailAddress>
<NSF_ID>000697259</NSF_ID>
<StartDate>06/29/2020</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name><![CDATA[University of California-Los Angeles]]></Name>
<CityName>LOS ANGELES</CityName>
<ZipCode>900244200</ZipCode>
<PhoneNumber>3107940102</PhoneNumber>
<StreetAddress><![CDATA[10889 WILSHIRE BLVD STE 700]]></StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<StateCode>CA</StateCode>
<CONGRESSDISTRICT>36</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>CA36</CONGRESS_DISTRICT_ORG>
<ORG_UEI_NUM>RN64EPNH8JC6</ORG_UEI_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF CALIFORNIA, LOS ANGELES</ORG_LGL_BUS_NAME>
<ORG_PRNT_UEI_NUM/>
</Institution>
<Performance_Institution>
<Name><![CDATA[UCLA, Computer Science Dept.]]></Name>
<CityName>Los Angeles</CityName>
<StateCode>CA</StateCode>
<ZipCode>900951596</ZipCode>
<StreetAddress><![CDATA[404 Westwood Plaza, 463 Engr VI.]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>California</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>36</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>CA36</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>779600</Code>
<Text>Algorithmic Foundations</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7926</Code>
<Text>ALGORITHMS</Text>
</ProgramReference>
<ProgramReference>
<Code>7927</Code>
<Text>COMPLEXITY &amp; CRYPTOGRAPHY</Text>
</ProgramReference>
<ProgramReference>
<Code>7935</Code>
<Text>COMM &amp; INFORMATION THEORY</Text>
</ProgramReference>
<Appropriation>
<Code>0120</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Fund>
<Code>01002021DB</Code>
<Name><![CDATA[NSF RESEARCH & RELATED ACTIVIT]]></Name>
<FUND_SYMB_ID>040100</FUND_SYMB_ID>
</Fund>
<FUND_OBLG>2020~400000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span>The project addressed central questions within two closely related areas: communication complexity, and pseudorandomness. What is the minimal amount of communication needed to complete a computational task when the input is split between different parties? Such questions have profound applications both in theory and in practice, especially as communication is increasingly becoming the bottleneck in large-scale computation. </span></p>  <p>A goal of the project is to prove meta-theorems and develop generic techniques that reduce understanding communication to much simpler 'decision-theoretic problems. Randomness versus determinism in the universe is an ancient philosophical debate. In computing, however, randomness seems to be winning hands down with amazing applications in cryptography, e-commerce, data analytics, algorithm design, and networking. Which of these applications absolutely need randomness? Which of them can still be simulated if we do not have random bits or have access only to defective random bits as in data from radioactive decay?</p>  <p>&nbsp;</p>  <p>The project has led to progress on many important aspects of the above questions. Below we highlight three such resultss:</p>  <p>1. New Lifting theorems from sunflowers: The project led to developing new lifting theorems using combinatorial techniques developed in the context of sunflowers.</p>  <p>2. The project led to the first significant progress on the problem of bounding the size 3AP-free sets introduced by Erdos and Turan in 1936:&nbsp;</p>  <p>Suppose you have a set S of integers from {1,2,...,N} that contains at least N / C elements. Then for large enough N, must S contain three equally spaced numbers (i.e., a 3-term arithmetic progression)?</p>  <p><br />In 1953, Roth showed this is the case when C is roughly (log log N). Behrend in 1946 showed that C can be at most exp(sqrt(log N)). Since then, the problem has been a cornerstone of the area of additive combinatorics. Following a series of remarkable results, a celebrated paper from 2020 due to Bloom and Sisask improved the lower bound on C to C = (log N)^(1+c) for some constant c &gt; 0.<br /><br />The PI along with student Zander Kelley showed that C can be as big as exp((log N)^0.08), thus getting closer to Behrend's construction.&nbsp;</p>  <p>3. New pseudorandom generators for polynomial threshold functions: This project led to the first non-trivial pseudorandom generators against threshold functions even when the degree is polynmially large.&nbsp;</p>  <div><span><br /></span></div>  <p>&nbsp;</p>  <p>&nbsp;</p><br> <p>  Last Modified: 11/25/2024<br> Modified by: Raghu&nbsp;Meka</p></div> <div class="porSideCol" ></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[  The project addressed central questions within two closely related areas: communication complexity, and pseudorandomness. What is the minimal amount of communication needed to complete a computational task when the input is split between different parties? Such questions have profound applications both in theory and in practice, especially as communication is increasingly becoming the bottleneck in large-scale computation.     A goal of the project is to prove meta-theorems and develop generic techniques that reduce understanding communication to much simpler 'decision-theoretic problems. Randomness versus determinism in the universe is an ancient philosophical debate. In computing, however, randomness seems to be winning hands down with amazing applications in cryptography, e-commerce, data analytics, algorithm design, and networking. Which of these applications absolutely need randomness? Which of them can still be simulated if we do not have random bits or have access only to defective random bits as in data from radioactive decay?        The project has led to progress on many important aspects of the above questions. Below we highlight three such resultss:    1. New Lifting theorems from sunflowers: The project led to developing new lifting theorems using combinatorial techniques developed in the context of sunflowers.    2. The project led to the first significant progress on the problem of bounding the size 3AP-free sets introduced by Erdos and Turan in 1936:    Suppose you have a set S of integers from {1,2,...,N} that contains at least N / C elements. Then for large enough N, must S contain three equally spaced numbers (i.e., a 3-term arithmetic progression)?     In 1953, Roth showed this is the case when C is roughly (log log N). Behrend in 1946 showed that C can be at most exp(sqrt(log N)). Since then, the problem has been a cornerstone of the area of additive combinatorics. Following a series of remarkable results, a celebrated paper from 2020 due to Bloom and Sisask improved the lower bound on C to C = (log N)^(1+c) for some constant c  0.  The PI along with student Zander Kelley showed that C can be as big as exp((log N)^0.08), thus getting closer to Behrend's construction.    3. New pseudorandom generators for polynomial threshold functions: This project led to the first non-trivial pseudorandom generators against threshold functions even when the degree is polynmially large.                Last Modified: 11/25/2024       Submitted by: RaghuMeka]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>
