<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle><![CDATA[SHF: Small: Programming Foundations for Real-Time Data Analysis]]></AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>06/01/2020</AwardEffectiveDate>
<AwardExpirationDate>07/31/2023</AwardExpirationDate>
<AwardTotalIntnAmount>500000.00</AwardTotalIntnAmount>
<AwardAmount>500000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05010000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CCF</Abbreviation>
<LongName>Division of Computing and Communication Foundations</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Anindya Banerjee</SignBlockName>
<PO_EMAI>abanerje@nsf.gov</PO_EMAI>
<PO_PHON>7032927885</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Modern information-processing systems handle large volumes of data that are produced in real time and need immediate analysis. These real-time data analyses are used to extract insights and enable decision-making in various application domains, such as business intelligence and patient monitoring. Existing systems for processing real-time (streaming) data focus on providing efficient and scalable execution over a distributed computing infrastructure. A common problem with these systems is that their behavior is not clearly specified, which makes it difficult to reason about their correctness. In many cases, the distributed execution of a streaming data analysis gives rise to unpredictable behavior that is not reproducible. The project's novelties are the development of a formal framework for specifying the behavior of real-time data-processing systems and the use of this framework for ensuring the reproducibility of computations. The project's impacts are advances in the practice of programming trustworthy and repeatable streaming data analyses.&lt;br/&gt;&lt;br/&gt;The project develops a novel programming foundation that encompasses the semantics of data-stream processing, the associated principles of query-language design, and a robust distributed implementation. A denotational semantics is described using a type discipline that captures various notions of data models and data invariants. Basic programming abstractions for stream processing are identified, which enable the modular specification of complex streaming analyses. An implementation is developed that guarantees efficient and reproducible distributed execution. The usefulness of the framework is established with case studies from the domains of enterprise business intelligence and patient monitoring in healthcare.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>06/01/2020</MinAmdLetterDate>
<MaxAmdLetterDate>06/01/2020</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>2008096</AwardID>
<Investigator>
<FirstName>Konstantinos</FirstName>
<LastName>Mamouras</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Konstantinos Mamouras</PI_FULL_NAME>
<EmailAddress><![CDATA[mamouras@rice.edu]]></EmailAddress>
<NSF_ID>000785096</NSF_ID>
<StartDate>06/01/2020</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name><![CDATA[William Marsh Rice University]]></Name>
<CityName>Houston</CityName>
<ZipCode>770051827</ZipCode>
<PhoneNumber>7133484820</PhoneNumber>
<StreetAddress><![CDATA[6100 MAIN ST]]></StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX09</CONGRESS_DISTRICT_ORG>
<ORG_UEI_NUM>K51LECU1G8N3</ORG_UEI_NUM>
<ORG_LGL_BUS_NAME>WILLIAM MARSH RICE UNIVERSITY</ORG_LGL_BUS_NAME>
<ORG_PRNT_UEI_NUM/>
</Institution>
<Performance_Institution>
<Name><![CDATA[William Marsh Rice University]]></Name>
<CityName>Houston</CityName>
<StateCode>TX</StateCode>
<ZipCode>770051827</ZipCode>
<StreetAddress><![CDATA[6100 Main St]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>09</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX09</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>779800</Code>
<Text>Software &amp; Hardware Foundation</Text>
</ProgramElement>
<ProgramReference>
<Code>7923</Code>
<Text>SMALL PROJECT</Text>
</ProgramReference>
<ProgramReference>
<Code>7943</Code>
<Text>PROGRAMMING LANGUAGES</Text>
</ProgramReference>
<Appropriation>
<Code>0120</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Fund>
<Code>01002021DB</Code>
<Name><![CDATA[NSF RESEARCH & RELATED ACTIVIT]]></Name>
<FUND_SYMB_ID>040100</FUND_SYMB_ID>
</Fund>
<FUND_OBLG>2020~500000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p>Data streams arise in a broad range of applications, including patient monitoring in healthcare, fraud detection, and real-time business intelligence. Motivated by such applications that require real-time data processing for decision-making, this project developed programming language techniques that enable reliable and efficient streaming data analyses. A key feature of this project's approach was the use of a class of algebraic structures as types that capture various different kinds of data streams. This gave rise to a typed denotational approach in specifying the meaning of stream processing computations that enables mathematical reasoning for the correctness of implementations. Based on these foundations, the project explored the design of domain-specific languages (DSLs) for data stream processing that can encode dataflow graphs and thus expose pipeline, task, and data parallelism. The parallel and distributed implementation of a streaming DSL was produced that guarantees semantics-preserving parallelization and achieves high performance and scalability.<br /><br />The results of the project on semantic foundations and domain-specific language design contributed ideas that are relevant to (i) the runtime verification and online monitoring of cyber-physical systems, and (ii) the high-performance monitoring of regular patterns over massive data streams. The research of the project was presented at conferences on programming languages and formal methods, including PLDI, OOPSLA, EMSOFT, and RV. The project supported the development of software tools for data stream processing, the creation of course modules for undergraduate and graduate courses, and the training of three PhD students.</p><br> <p>  Last Modified: 11/27/2023<br> Modified by: Konstantinos&nbsp;Mamouras</p></div> <div class="porSideCol" ></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[  Data streams arise in a broad range of applications, including patient monitoring in healthcare, fraud detection, and real-time business intelligence. Motivated by such applications that require real-time data processing for decision-making, this project developed programming language techniques that enable reliable and efficient streaming data analyses. A key feature of this project's approach was the use of a class of algebraic structures as types that capture various different kinds of data streams. This gave rise to a typed denotational approach in specifying the meaning of stream processing computations that enables mathematical reasoning for the correctness of implementations. Based on these foundations, the project explored the design of domain-specific languages (DSLs) for data stream processing that can encode dataflow graphs and thus expose pipeline, task, and data parallelism. The parallel and distributed implementation of a streaming DSL was produced that guarantees semantics-preserving parallelization and achieves high performance and scalability.  The results of the project on semantic foundations and domain-specific language design contributed ideas that are relevant to (i) the runtime verification and online monitoring of cyber-physical systems, and (ii) the high-performance monitoring of regular patterns over massive data streams. The research of the project was presented at conferences on programming languages and formal methods, including PLDI, OOPSLA, EMSOFT, and RV. The project supported the development of software tools for data stream processing, the creation of course modules for undergraduate and graduate courses, and the training of three PhD students.     Last Modified: 11/27/2023       Submitted by: KonstantinosMamouras]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>
