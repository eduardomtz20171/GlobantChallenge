<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle><![CDATA[Collaborative Research: EAGER: SaTC-EDU: Dynamic Adaptive Machine Learning for Teaching Hardware Security (DYNAMITES)]]></AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>09/01/2020</AwardEffectiveDate>
<AwardExpirationDate>08/31/2023</AwardExpirationDate>
<AwardTotalIntnAmount>150000.00</AwardTotalIntnAmount>
<AwardAmount>150000</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>11010000</Code>
<Directorate>
<Abbreviation>EDU</Abbreviation>
<LongName>Directorate for STEM Education</LongName>
</Directorate>
<Division>
<Abbreviation>DGE</Abbreviation>
<LongName>Division Of Graduate Education</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Ambareen Siraj</SignBlockName>
<PO_EMAI>asiraj@nsf.gov</PO_EMAI>
<PO_PHON>7032928182</PO_PHON>
</ProgramOfficer>
<AbstractNarration><![CDATA[Cybersecurity is key to safeguarding societal wellbeing in the present digital era. As threats at the hardware level become more prevalent, skills and knowledge for hardware security become more crucial for cybersecurity professionals. In addition, the rise of artificial intelligence (AI) promises to rapidly evolve the threat landscape. To prepare the next-generation cybersecurity workforce, students need opportunities to hone their skills on a variety of different hardware security problems. Current curriculum on hardware security focuses on theory and a small number of hand-crafted exercises, thus providing limited opportunity to apply learning to evolving scenarios. To address these drawbacks, this project intertwines AI and hardware security to develop new tools for preparing students to be creative and flexible, and ultimately, better prepared for dealing with newly emerging hardware security threats.&lt;br/&gt;&lt;br/&gt;To improve the state-of-the-art in hardware security and cybersecurity education, this project is seeking new insights at uncharted intersections of hardware security and AI-based decision making. The project will investigate how to  enable students to attack and defend hardware by sparring against DYNAMITES, which is a dynamic adaptive machine learning tool for teaching hardware security.  The project will also examine hardware security pedagogy to understand the impact of the tool in shaping studentsâ€™ cognitive processes. The major goal is to develop and evaluate DYNAMITES through research in three directions: (1) investigating and adapting techniques to allow AI to understand hardware, (2) exploring how AI can be used to produce new problems intelligently, and (3) exploring how AI in the learning environment affects the "security mindset" in students. These findings will allow hardware security education to scale, reducing the barrier to entry and arming future professionals with the skills needed to protect critical systems, as well as jump-starting innovations in automated, scalable scanning and patching of hardware vulnerabilities. The hardware attack/defense artifacts emerging from this project will be released for use in teaching and research, and the project team will disseminate tools/techniques that emerge from this project.&lt;br/&gt;&lt;br/&gt;This project is supported by a special initiative of the Secure and Trustworthy Cyberspace (SaTC) program to foster new, previously unexplored, collaborations between the fields of cybersecurity, artificial intelligence, and education. The SaTC program aligns with the Federal Cybersecurity Research and Development Strategic Plan and the National Privacy Research Strategy to protect and preserve the growing social and economic benefits of cyber systems while ensuring security and privacy.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.]]></AbstractNarration>
<MinAmdLetterDate>07/28/2020</MinAmdLetterDate>
<MaxAmdLetterDate>07/28/2020</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.076</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>2039610</AwardID>
<Investigator>
<FirstName>Susan</FirstName>
<LastName>Fields</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Susan Fields</PI_FULL_NAME>
<EmailAddress><![CDATA[fields_susan@tamu.edu]]></EmailAddress>
<NSF_ID>000830836</NSF_ID>
<StartDate>07/28/2020</StartDate>
<EndDate/>
<RoleCode>Co-Principal Investigator</RoleCode>
</Investigator>
<Investigator>
<FirstName>Jeyavijayan</FirstName>
<LastName>Rajendran</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Jeyavijayan Rajendran</PI_FULL_NAME>
<EmailAddress><![CDATA[jv.rajendran@tamu.edu]]></EmailAddress>
<NSF_ID>000703682</NSF_ID>
<StartDate>07/28/2020</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name>Texas A&amp;M Engineering Experiment Station</Name>
<CityName>COLLEGE STATION</CityName>
<ZipCode>778433124</ZipCode>
<PhoneNumber>9798626777</PhoneNumber>
<StreetAddress>3124 TAMU</StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<StateCode>TX</StateCode>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>TX10</CONGRESS_DISTRICT_ORG>
<ORG_UEI_NUM>QD1MX6N5YTN4</ORG_UEI_NUM>
<ORG_LGL_BUS_NAME>TEXAS A&amp;M ENGINEERING EXPERIMENT STATION</ORG_LGL_BUS_NAME>
<ORG_PRNT_UEI_NUM>QD1MX6N5YTN4</ORG_PRNT_UEI_NUM>
</Institution>
<Performance_Institution>
<Name><![CDATA[Texas A&M Engineering Experiment Station]]></Name>
<CityName>College Station</CityName>
<StateCode>TX</StateCode>
<ZipCode>778433128</ZipCode>
<StreetAddress><![CDATA[3128 TAMU]]></StreetAddress>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Texas</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>10</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>TX10</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>8060</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>025Z</Code>
<Text>SaTC: Secure and Trustworthy Cyberspace</Text>
</ProgramReference>
<ProgramReference>
<Code>093Z</Code>
<Text>AI Education/Workforce Develop</Text>
</ProgramReference>
<ProgramReference>
<Code>7916</Code>
<Text>EAGER</Text>
</ProgramReference>
<Appropriation>
<Code>0120</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Appropriation>
<Code>0420</Code>
<Name>NSF Education &amp; Human Resource</Name>
<APP_SYMB_ID>040106</APP_SYMB_ID>
</Appropriation>
<Fund>
<Code>01002021DB</Code>
<Name><![CDATA[NSF RESEARCH & RELATED ACTIVIT]]></Name>
<FUND_SYMB_ID>040100</FUND_SYMB_ID>
</Fund>
<Fund>
<Code>04002021DB</Code>
<Name><![CDATA[NSF Education & Human Resource]]></Name>
<FUND_SYMB_ID>040106</FUND_SYMB_ID>
</Fund>
<FUND_OBLG>2020~150000</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span>An artificial intelligence (AI)-based self-optimization system for various problems in computer security is designed to drastically reduce the time to develop novel solutions. The system includes multiple parts, starting with a training data generator, which shall comprise multiple sources of data such as CVE lists and artifacts from security competitions. The training data shall be used to train different defense and attack AI agents for different kinds of security problems, such as hardware Trojan detection and detailed evaluation of hardware Trojan detection techniques, as well as their impact in teaching hardware security. Novel customized AI model architectures for these security problems shall also be devised to enable efficient and effective learning. The attack and defense AI agents shall then be trained in a closed AI vs. AI loop through novel training algorithms, resulting in a dynamic evolution of AI-based agents for different security problems. The trained AI agents shall then be evaluated using a quality evaluation module and its feedback shall be used to further enhance the agents&rsquo; performance. Moreover, a detailed analysis of the complexity vs. scalability tradeoff shall be performed to find optimal solutions on the Pareto front of overheads and security provided. The advantages of such a closed-loop AI vs. AI optimization system are (i) acceleration in the development of attacks and defenses for real-world applications, (ii) identification of vulnerabilities in existing attacks and defenses, (iii) automation of the identification of novel solutions, (iv) development of secure solutions against dynamic adversaries as opposed to a static adversary, and (v) independence from human expertise and bias in developing solutions.</span><span>For detecting hardware Trojans, we designed a novel reinforcement learning agent that is scalable to practical designs like processors and cryptographic IPs. The devised agent outperforms all prior works by two orders of magnitude. For evaluating hardware Trojan detection techniques, we devised an attack agent using AI. The attack agent successfully designs stealthy hardware Trojans that evade all known detection techniques, thereby demonstrating the flaws in existing hardware Trojan detection techniques. Based on these two AI agents, we also designed a novel course module for improving hardware security education. In particular, we devised novel interactive assignments where students play &ldquo;games&rdquo; with our AI-based tools. In each round of the game, students either detect hardware Trojans or insert them, and our AI agents provide them with feedback based on the quality of their solutions. The students then leverage this feedback to improve their strategy in the next round of the game. Thus, in the process of different rounds of the game, students learn how to detect hardware Trojans and how to evaluate Trojan detection techniques.</span></p><br> <p>  Last Modified: 01/02/2024<br> Modified by: Jeyavijayan&nbsp;Rajendran</p></div> <div class="porSideCol" ></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[  An artificial intelligence (AI)-based self-optimization system for various problems in computer security is designed to drastically reduce the time to develop novel solutions. The system includes multiple parts, starting with a training data generator, which shall comprise multiple sources of data such as CVE lists and artifacts from security competitions. The training data shall be used to train different defense and attack AI agents for different kinds of security problems, such as hardware Trojan detection and detailed evaluation of hardware Trojan detection techniques, as well as their impact in teaching hardware security. Novel customized AI model architectures for these security problems shall also be devised to enable efficient and effective learning. The attack and defense AI agents shall then be trained in a closed AI vs. AI loop through novel training algorithms, resulting in a dynamic evolution of AI-based agents for different security problems. The trained AI agents shall then be evaluated using a quality evaluation module and its feedback shall be used to further enhance the agents performance. Moreover, a detailed analysis of the complexity vs. scalability tradeoff shall be performed to find optimal solutions on the Pareto front of overheads and security provided. The advantages of such a closed-loop AI vs. AI optimization system are (i) acceleration in the development of attacks and defenses for real-world applications, (ii) identification of vulnerabilities in existing attacks and defenses, (iii) automation of the identification of novel solutions, (iv) development of secure solutions against dynamic adversaries as opposed to a static adversary, and (v) independence from human expertise and bias in developing solutions.For detecting hardware Trojans, we designed a novel reinforcement learning agent that is scalable to practical designs like processors and cryptographic IPs. The devised agent outperforms all prior works by two orders of magnitude. For evaluating hardware Trojan detection techniques, we devised an attack agent using AI. The attack agent successfully designs stealthy hardware Trojans that evade all known detection techniques, thereby demonstrating the flaws in existing hardware Trojan detection techniques. Based on these two AI agents, we also designed a novel course module for improving hardware security education. In particular, we devised novel interactive assignments where students play games with our AI-based tools. In each round of the game, students either detect hardware Trojans or insert them, and our AI agents provide them with feedback based on the quality of their solutions. The students then leverage this feedback to improve their strategy in the next round of the game. Thus, in the process of different rounds of the game, students learn how to detect hardware Trojans and how to evaluate Trojan detection techniques.     Last Modified: 01/02/2024       Submitted by: JeyavijayanRajendran]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>
