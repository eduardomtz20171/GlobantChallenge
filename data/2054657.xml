<?xml version="1.0" encoding="UTF-8"?>
<rootTag>
<Award>
<AwardTitle><![CDATA[CRII: SaTC: Securing Containers in Multi-Tenant Environment via Augmenting Linux Control Groups]]></AwardTitle>
<AGENCY>NSF</AGENCY>
<AwardEffectiveDate>08/16/2020</AwardEffectiveDate>
<AwardExpirationDate>05/31/2024</AwardExpirationDate>
<AwardTotalIntnAmount>152097.00</AwardTotalIntnAmount>
<AwardAmount>152097</AwardAmount>
<AwardInstrument>
<Value>Standard Grant</Value>
</AwardInstrument>
<Organization>
<Code>05050000</Code>
<Directorate>
<Abbreviation>CSE</Abbreviation>
<LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
</Directorate>
<Division>
<Abbreviation>CNS</Abbreviation>
<LongName>Division Of Computer and Network Systems</LongName>
</Division>
</Organization>
<ProgramOfficer>
<SignBlockName>Karen Karavanic</SignBlockName>
<PO_EMAI>kkaravan@nsf.gov</PO_EMAI>
<PO_PHON>7032922594</PO_PHON>
</ProgramOfficer>
<AbstractNarration>Container technology provides a lightweight operating system level virtual hosting environment. It has been broadly adopted in various computation scenarios, including edge computing, serverless computing, and commercial clouds. Containers depend on multiple building blocks in the Linux kernel for resource isolation and control. Particularly, Linux Control Groups (i.e., cgroups) are leveraged to apply resource limits and account for resource usage for containers. However, those features in the Linux kernel may not provide the same level of security guarantees as conventional virtual machines. For example, breaking the resource control of cgroups would not only cause unfair resource sharing among multiple container instances, but also significantly reduce containersâ€™ performance. This project intends to secure containers by systematically investigating security implications in cgroups and developing new defending systems to mitigate potential security threats in multi-tenant container environments. The research is expected to identify and address new security challenges in containers, and thus benefit both container service providers and customers. Educational and outreach activities include curriculum development in systems programming and cloud security, and research experience opportunities for women and minority students as well as for high school students.   &lt;br/&gt;&lt;br/&gt;The project would systematically explore methods to break the resource rein of the existing cgroups mechanism, and comprehensively understand the security impacts on Linux containers. It develops a set of exploiting strategies to generate out-of-band workloads to escape cgroups. Novel kernel code analysis techniques are developed that use a combination of data flow, control flow and program dependency graphs to automatically uncover feasible exploitation cases available inside unprivileged containers with a set of cgroup resource controllers enabled. All potential exploits are quantitatively evaluated on multiple testbeds in realistic container environments under various attack scenarios. Specifically, a variety of real-world workloads are evaluated to understand the impact and severity of vulnerabilities. With better knowledge of the inadequacies in existing cgroup mechanism and related exploitations, the project develops lightweight defense mechanisms to secure containers and mitigate potential security threats. The proposed system is evaluated in terms of multiple aspects including performance and security.&lt;br/&gt;&lt;br/&gt;This award reflects NSF's statutory mission and has been deemed worthy of support through evaluation using the Foundation's intellectual merit and broader impacts review criteria.</AbstractNarration>
<MinAmdLetterDate>10/27/2020</MinAmdLetterDate>
<MaxAmdLetterDate>10/27/2020</MaxAmdLetterDate>
<ARRAAmount/>
<TRAN_TYPE>Grant</TRAN_TYPE>
<CFDA_NUM>47.070</CFDA_NUM>
<NSF_PAR_USE_FLAG>1</NSF_PAR_USE_FLAG>
<FUND_AGCY_CODE>4900</FUND_AGCY_CODE>
<AWDG_AGCY_CODE>4900</AWDG_AGCY_CODE>
<AwardID>2054657</AwardID>
<Investigator>
<FirstName>Xing</FirstName>
<LastName>Gao</LastName>
<PI_MID_INIT/>
<PI_SUFX_NAME/>
<PI_FULL_NAME>Xing Gao</PI_FULL_NAME>
<EmailAddress><![CDATA[xgao@udel.edu]]></EmailAddress>
<NSF_ID>000784502</NSF_ID>
<StartDate>10/27/2020</StartDate>
<EndDate/>
<RoleCode>Principal Investigator</RoleCode>
</Investigator>
<Institution>
<Name><![CDATA[University of Delaware]]></Name>
<CityName>NEWARK</CityName>
<ZipCode>197131324</ZipCode>
<PhoneNumber>3028312136</PhoneNumber>
<StreetAddress><![CDATA[550 S COLLEGE AVE]]></StreetAddress>
<StreetAddress2/>
<CountryName>United States</CountryName>
<StateName>Delaware</StateName>
<StateCode>DE</StateCode>
<CONGRESSDISTRICT>00</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_ORG>DE00</CONGRESS_DISTRICT_ORG>
<ORG_UEI_NUM>T72NHKM259N3</ORG_UEI_NUM>
<ORG_LGL_BUS_NAME>UNIVERSITY OF DELAWARE</ORG_LGL_BUS_NAME>
<ORG_PRNT_UEI_NUM/>
</Institution>
<Performance_Institution>
<Name><![CDATA[University of Delaware]]></Name>
<CityName/>
<StateCode>DE</StateCode>
<ZipCode>197160099</ZipCode>
<StreetAddress/>
<CountryCode>US</CountryCode>
<CountryName>United States</CountryName>
<StateName>Delaware</StateName>
<CountryFlag>1</CountryFlag>
<CONGRESSDISTRICT>00</CONGRESSDISTRICT>
<CONGRESS_DISTRICT_PERF>DE00</CONGRESS_DISTRICT_PERF>
</Performance_Institution>
<ProgramElement>
<Code>806000</Code>
<Text>Secure &amp;Trustworthy Cyberspace</Text>
</ProgramElement>
<ProgramReference>
<Code>025Z</Code>
<Text>SaTC: Secure and Trustworthy Cyberspace</Text>
</ProgramReference>
<ProgramReference>
<Code>8228</Code>
<Text>CISE Resrch Initiatn Initiatve</Text>
</ProgramReference>
<ProgramReference>
<Code>9150</Code>
<Text>EXP PROG TO STIM COMP RES</Text>
</ProgramReference>
<Appropriation>
<Code>0120</Code>
<Name>NSF RESEARCH &amp; RELATED ACTIVIT</Name>
<APP_SYMB_ID>040100</APP_SYMB_ID>
</Appropriation>
<Fund>
<Code>01002021DB</Code>
<Name><![CDATA[NSF RESEARCH & RELATED ACTIVIT]]></Name>
<FUND_SYMB_ID>040100</FUND_SYMB_ID>
</Fund>
<FUND_OBLG>2020~152097</FUND_OBLG>
<POR>
<DRECONTENT><![CDATA[<div class="porColContainerWBG"> <div class="porContentCol"><p><span id="docs-internal-guid-9397f221-7fff-ae6e-9f2c-b131014bfb8d"> </span></p> <p dir="ltr"><span>Container technology has gained significant popularity and importance across various domains including cloud computing and software development. Ensuring the security of containers is crucial, as they should provide robust isolation and protection, particularly in multi-tenant environments where multiple users share the same physical infrastructure. This project investigates security issues in Linux containers such as Docker, and aims to develop lightweight systems that enhance container security.</span></p> <p dir="ltr"><span>In this project, we have designed, developed, and open-sourced several tools to identify and mitigate potential security issues in Linux containers. Specifically, we have created a fuzzing tool for Linux containers to automatically detect out-of-band workloads that can escape resource control. This tool generates containerized workloads and mutates sequences of system calls to breach isolation boundaries, combining traditional code coverage feedback with resource utilization measurements. The tool also supports parallel execution and is compatible with multiple container runtimes, including both native and sandboxed environments. It has successfully identified several previously unknown vulnerabilities. Additionally, we have researched potential security issues in container registries -- platforms that allow developers to publish, maintain, and manage container images. Our empirical studies on both public and private container registries have focused on the issue of typosquatting, where users inadvertently download malicious container images due to typographical errors. We have developed a lightweight tool that can be integrated into Docker CLI to mitigate the potential issues.</span></p> <p dir="ltr"><span>We have investigated container-related security issues in various scenarios such as cloud and serverless computing. For instance, we have developed a secured container sharing system designed to enhance serverless computing performance. By incorporating multiple practical optimizations from modern caching and leveraging deep learning techniques, this system supports secure function instance sharing among different tenants while reducing container cold starts. Trace-driven experiments with serverless computing benchmarks across multiple scenarios demonstrate the system's substantial performance improvements. Furthermore, we have researched the improper use of containers and their potential security issues in the software development process, where containers are commonly used as sandboxes. Improper usage can lead to serious problems, such as privilege escalation or sensitive data leakage. To address this, we developed tools to identify security issues across various continuous integration platforms and disclosed several vulnerabilities. Moreover, we have also investigated new side-channel attacks in computer systems within multi-tenant cloud environments.</span></p> <p dir="ltr"><span>Finally, this project has created new educational opportunities, supporting multiple Ph.D. and undergraduate students. Portions of the project have been incorporated into the curriculum at the University of Delaware. Specifically, the PI has developed hands-on labs to offer practical experience with Linux containers and their associated security issues. Additionally, the PI has given public lectures to engage a broader audience in cybersecurity research.</span></p> <p>&nbsp;</p><br> <p>  Last Modified: 08/06/2024<br> Modified by: Xing&nbsp;Gao</p></div> <div class="porSideCol" ></div> </div>]]></DRECONTENT>
<POR_COPY_TXT><![CDATA[      Container technology has gained significant popularity and importance across various domains including cloud computing and software development. Ensuring the security of containers is crucial, as they should provide robust isolation and protection, particularly in multi-tenant environments where multiple users share the same physical infrastructure. This project investigates security issues in Linux containers such as Docker, and aims to develop lightweight systems that enhance container security.   In this project, we have designed, developed, and open-sourced several tools to identify and mitigate potential security issues in Linux containers. Specifically, we have created a fuzzing tool for Linux containers to automatically detect out-of-band workloads that can escape resource control. This tool generates containerized workloads and mutates sequences of system calls to breach isolation boundaries, combining traditional code coverage feedback with resource utilization measurements. The tool also supports parallel execution and is compatible with multiple container runtimes, including both native and sandboxed environments. It has successfully identified several previously unknown vulnerabilities. Additionally, we have researched potential security issues in container registries -- platforms that allow developers to publish, maintain, and manage container images. Our empirical studies on both public and private container registries have focused on the issue of typosquatting, where users inadvertently download malicious container images due to typographical errors. We have developed a lightweight tool that can be integrated into Docker CLI to mitigate the potential issues.   We have investigated container-related security issues in various scenarios such as cloud and serverless computing. For instance, we have developed a secured container sharing system designed to enhance serverless computing performance. By incorporating multiple practical optimizations from modern caching and leveraging deep learning techniques, this system supports secure function instance sharing among different tenants while reducing container cold starts. Trace-driven experiments with serverless computing benchmarks across multiple scenarios demonstrate the system's substantial performance improvements. Furthermore, we have researched the improper use of containers and their potential security issues in the software development process, where containers are commonly used as sandboxes. Improper usage can lead to serious problems, such as privilege escalation or sensitive data leakage. To address this, we developed tools to identify security issues across various continuous integration platforms and disclosed several vulnerabilities. Moreover, we have also investigated new side-channel attacks in computer systems within multi-tenant cloud environments.   Finally, this project has created new educational opportunities, supporting multiple Ph.D. and undergraduate students. Portions of the project have been incorporated into the curriculum at the University of Delaware. Specifically, the PI has developed hands-on labs to offer practical experience with Linux containers and their associated security issues. Additionally, the PI has given public lectures to engage a broader audience in cybersecurity research.        Last Modified: 08/06/2024       Submitted by: XingGao]]></POR_COPY_TXT>
</POR>
</Award>
</rootTag>
